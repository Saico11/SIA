	
CREATE DATABASE Inventario;

USE Inventario;

CREATE TABLE Empleado(
	id_empleado CHAR(8) PRIMARY KEY,
    rol VARCHAR(255),
    nombres VARCHAR(255),
    apellido_pat VARCHAR(255),
    apellido_mat VARCHAR(255)
);

CREATE TABLE Correo (
    id_correo INTEGER UNIQUE,
    id_empleado CHAR(8) NOT NULL,
    dominio VARCHAR(255) NOT NULL,
    nombre_usuario VARCHAR(255) NOT NULL,
    FOREIGN KEY (id_empleado) REFERENCES Empleado(id_empleado),
    PRIMARY KEY (id_empleado, id_correo) 
);

CREATE TABLE Almacen (
    id_almacen CHAR(8) PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    descripcion VARCHAR(255) NOT NULL,
    cantidad INTEGER NOT NULL,
    id_empleado CHAR(8) NOT NULL UNIQUE,
    FOREIGN KEY (id_empleado) REFERENCES Empleado(id_empleado)
);

CREATE TABLE Grupo (
	id_grupo INTEGER PRIMARY KEY AUTO_INCREMENT,
	nombre VARCHAR(255) NOT NULL
);

CREATE TABLE Subgrupo (
    id_subgrupo INTEGER PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(255) NOT NULL,
    id_grupo INTEGER NOT NULL,
    FOREIGN KEY (id_grupo) REFERENCES Grupo(id_grupo)
);

CREATE TABLE Lote (
	id_producto char(8) NOT NULL,
	numero_lote varchar(255) NOT NULL UNIQUE,
	FOREIGN KEY (id_producto) REFERENCES Producto(id_producto),
	PRIMARY KEY (id_producto, numero_lote)
);

CREATE TABLE Producto(
	id_producto CHAR(8) PRIMARY KEY,
    id_empleado CHAR(8) NOT NULL,
    id_subgrupo INTEGER NOT NULL,
    nombre VARCHAR(255) NOT NULL,
    unidad CHAR(4) NOT NULL, 
    stock INTEGER NOT NULL,
    anio_vencimiento NUMERIC(4) NOT NULL,
    mes_vencimiento NUMERIC(2) NOT NULL,
    dia_vencimiento NUMERIC(2) NOT NULL,
	anio_produccion NUMERIC(4) NOT NULL,
    mes_produccion NUMERIC(2) NOT NULL,
    dia_produccion NUMERIC(2) NOT NULL,
    anio_administracion NUMERIC(4) NOT NULL,
    mes_administracion NUMERIC(2) NOT NULL,
    dia_administracion NUMERIC(2) NOT NULL,
    FOREIGN KEY (id_empleado) REFERENCES Empleado(id_empleado),
    FOREIGN KEY (id_subgrupo) REFERENCES Subgrupo(id_subgrupo)
);

CREATE TABLE Ubicacion(
	id_producto CHAR(8) NOT NULL,
    id_ubicacion CHAR(8) NOT NULL,
    nombre VARCHAR(255) NOT NULL,
    FOREIGN KEY (id_producto) REFERENCES Producto(id_producto),
    PRIMARY KEY (id_producto, id_ubicacion)
);

CREATE TABLE Telefono(
	id_empleado CHAR(8),
    id_telefono CHAR(8),
    numero_telefono CHAR(9),
    FOREIGN KEY (id_empleado) REFERENCES Empleado(id_empleado),
    PRIMARY KEY (id_empleado, id_telefono)
);

CREATE TABLE Negocio(
	RUC CHAR(11) PRIMARY KEY,
    razon_social VARCHAR(255)
);

CREATE TABLE Factura (
    numero_fact CHAR(10) PRIMARY KEY,
    total INTEGER NOT NULL,
    fecha DATE NOT NULL,
    id_empleado CHAR(8) NOT NULL,
    RUC CHAR(11) NOT NULL,
    FOREIGN KEY (id_empleado) REFERENCES Empleado(id_empleado),
    FOREIGN KEY (RUC) REFERENCES Negocio(RUC)
);

CREATE TABLE Descripcion(
    id_descripcion INTEGER UNIQUE,
    numero_fact CHAR(9),
    descripcion VARCHAR(255),
    cantidad DECIMAL,
    precio_unitario DECIMAL,
    precio_total DECIMAL,
    FOREIGN KEY (numero_fact) REFERENCES Factura(numero_fact),
    PRIMARY KEY (numero_fact, id_descripcion)
);

CREATE INDEX idx_producto ON Producto(nombre);
CREATE INDEX idx_empleado ON Empleado(nombres);
CREATE INDEX idx_factura ON Factura(RUC);
CREATE INDEX idx_negocio ON Negocio(razon_social);


INSERT INTO Empleado (id_empleado, rol, nombres, apellido_pat, apellido_mat)
VALUES
('E0000001', 'Gerente', 'Juan', 'Perez', 'Lopez'),
('E0000002', 'Encargado', 'Maria', 'Garcia', 'Sanchez'),
('E0000003', 'Supervisor', 'Carlos', 'Lopez', 'Martinez'),
('E0000004', 'Encargado', 'Ana', 'Torres', 'Fernandez'),
('E0000005', 'Gerente', 'Luis', 'Ramirez', 'Jimenez'),
('E0000006', 'Encargado', 'Rosa', 'Vega', 'Diaz'),
('E0000007', 'Supervisor', 'Mario', 'Santos', 'Hernandez'),
('E0000008', 'Encargado', 'Laura', 'Gutierrez', 'Marin'),
('E0000009', 'Encargado', 'Pedro', 'Nunez', 'Ramos'),
('E0000010', 'Supervisor', 'Sofia', 'Mendez', 'Castro');


INSERT INTO Correo (id_correo, id_empleado, dominio, nombre_usuario)
VALUES
(1, 'E0000001', 'gmail.com', 'juan.p'),
(2, 'E0000002', 'gmail.com', 'maria.g'),
(3, 'E0000003', 'gmail.com', 'carlos.l'),
(4, 'E0000004', 'gmail.com', 'ana.t'),
(5, 'E0000005', 'gmail.com', 'luis.r'),
(6, 'E0000006', 'gmail.com', 'rosa.v'),
(7, 'E0000007', 'gmail.com', 'mario.s'),
(8, 'E0000008', 'gmail.com', 'laura.g'),
(9, 'E0000009', 'gmail.com', 'pedro.n'),
(10, 'E0000010', 'gmail.com', 'sofia.m');


INSERT INTO Almacen (id_almacen, nombre, descripcion, cantidad, id_empleado)
VALUES
('A0000001', 'Ejercito-Cayma', 'Productos alimenticios y de primera necesidad', 20000, 'E0000001'),
('A0000002', 'Salaverry-Miraflores', 'Lácteos y verduras frescas', 8500, 'E0000002'),
('A0000003', 'Colonial-Yanahuara', 'Frutas, verduras y alimentos secos', 12000, 'E0000003'),
('A0000004', 'Tacna-Paucarpata', 'Productos de limpieza y alimentos básicos', 9000, 'E0000004'),
('A0000005', 'Alameda-Cercado', 'Alimentos enlatados y conservas', 15000, 'E0000005'),
('A0000006', 'Calle Mercaderes-Cercado', 'Productos de higiene y cuidado personal', 7000, 'E0000006'),
('A0000007', 'Aviacion-Socabaya', 'Abarrotes y alimentos procesados', 6000, 'E0000007'),
('A0000008', 'Tristan-Vallecito', 'Granos y productos secos', 8000, 'E0000008'),
('A0000009', 'Peru-Cerro Colorado', 'Abarrotes de primera necesidad', 5000, 'E0000009'),
('A0000010', 'Cayma-Cayma', 'Bebidas y alimentos perecibles', 7500, 'E0000010');


INSERT INTO Grupo (id_grupo, nombre)
VALUES
(1, 'Alimentos'),
(2, 'Limpieza'),
(3, 'Higiene Personal'),
(4, 'Bebidas'),
(5, 'Lacteos'),
(6, 'Verduras'),
(7, 'Granos'),
(8, 'Conservas'),
(9, 'Abarrotes'),
(10, 'Bebidas no Alcoholicas');


INSERT INTO Subgrupo (id_subgrupo, nombre, id_grupo)
VALUES
(1, 'Snacks', 1),
(2, 'Detergentes', 2),
(3, 'Shampoos', 3),
(4, 'Jugos', 4),
(5, 'Yogurt', 5),
(6, 'Vegetales', 6),
(7, 'Cereales', 7),
(8, 'Enlatados', 8),
(9, 'Fideos', 9),
(10, 'Gaseosas', 10);


INSERT INTO Producto (id_producto, id_empleado, id_subgrupo, nombre, unidad, stock, anio_vencimiento, mes_vencimiento, dia_vencimiento, anio_produccion, mes_produccion, dia_produccion, anio_administracion, mes_administracion, dia_administracion)
VALUES
('P0000001', 'E0000001', 1, 'Papas Margarita', 'GR', 500.00, 2025, 12, 20, 2022, 5, 12, 2023, 6, 15),
('P0000002', 'E0000002', 2, 'Detergente Sapolio', 'LT', 300.00, 2026, 1, 15, 2021, 3, 22, 2024, 2, 1),
('P0000003', 'E0000003', 3, 'Shampoo Sedal', 'ML', 1000.00, 2027, 8, 18, 2023, 4, 10, 2024, 7, 21),
('P0000004', 'E0000004', 4, 'Jugo Gloria', 'LT', 800.00, 2026, 9, 13, 2020, 2, 5, 2023, 11, 2),
('P0000005', 'E0000005', 5, 'Yogurt Laive', 'LT', 250.00, 2027, 6, 7, 2023, 12, 1, 2024, 9, 30),
('P0000006', 'E0000006', 6, 'Tomate', 'KG', 400.00, 2026, 4, 10, 2022, 10, 5, 2024, 3, 18),
('P0000007', 'E0000007', 7, 'Avena 3 Ositos', 'KG', 1500.00, 2028, 5, 25, 2021, 1, 17, 2023, 4, 8),
('P0000008', 'E0000008', 8, 'Atún Florida', 'LT', 600.00, 2027, 3, 10, 2023, 5, 24, 2024, 8, 19),
('P0000009', 'E0000009', 9, 'Fideos Don Vittorio', 'KG', 1200.00, 2029, 11, 2, 2022, 9, 15, 2023, 10, 6),
('P0000010', 'E0000010', 10, 'Gaseosa Inca Kola', 'LT', 1000.00, 2028, 2, 28, 2023, 3, 1, 2024, 12, 10);


INSERT INTO Lote (id_producto, numero_lote)
VALUES
('P0000001', '416102A'),
('P0000002', '512045B'),
('P0000003', '615432C'),
('P0000004', '714231D'),
('P0000005', '816504E'),
('P0000006', '917234F'),
('P0000007', '109876G'),
('P0000008', '215432H'),
('P0000009', '325643I'),
('P0000010', '431245J');


INSERT INTO Ubicacion (id_producto, id_ubicacion, nombre)
VALUES
('P0000001', 'U0000001', 'E1-F1-C1'),
('P0000002', 'U0000002', 'E1-F2-C1'),
('P0000003', 'U0000003', 'E2-F1-C2'),
('P0000004', 'U0000004', 'E2-F2-C2'),
('P0000005', 'U0000005', 'E3-F1-C1'),
('P0000006', 'U0000006', 'E3-F2-C1'),
('P0000007', 'U0000007', 'E4-F1-C1'),
('P0000008', 'U0000008', 'E4-F2-C2'),
('P0000009', 'U0000009', 'E5-F1-C1'),
('P0000010', 'U0000010', 'E5-F2-C1');


INSERT INTO Producto (id_producto, id_empleado, id_subgrupo, nombre, unidad, stock, anio_vencimiento, mes_vencimiento, dia_vencimiento, anio_produccion, mes_produccion, dia_produccion, anio_administracion, mes_administracion, dia_administracion)
VALUES
('P0000011', 'E0000005', 1, 'Leche Gloria', 'LT', 200.00, 2025, 1, 15, 2023, 1, 10, 2024, 1, 20),
('P0000012', 'E0000009', 2, 'Yogurt Gloria', 'LT', 300.00, 2025, 1, 10, 2024, 2, 20, 2024, 3, 15),
('P0000013', 'E0000010', 3, 'Panetón D’onofrio', 'KG', 100.00, 2025, 1, 5, 2023, 8, 20, 2024, 8, 12),
('P0000014', 'E0000002', 4, 'Mantequilla Gloria', 'GR', 500.00, 2024, 12, 20, 2022, 6, 15, 2024, 10, 5),
('P0000015', 'E0000001', 5, 'Queso Andino', 'KG', 250.00, 2024, 11, 30, 2024, 5, 10, 2024, 6, 22);


INSERT INTO Negocio (RUC, razon_social) VALUES
('20517398764', 'Inka Cola S.A.'),
('20123456789', 'Coca-Cola Perú S.A.'),
('20450012345', 'Nestlé Perú S.A.'),
('20507465134', 'Bembos S.A.'),
('20104268983', 'Alicorp S.A.A.'),
('20513842594', 'Donnuts S.A.'),
('20420012346', 'Cervecería Backus y Johnston S.A.'),
('20514348452', 'San Fernando S.A.'),
('20456910767', 'Grupo Gloria S.A.'),
('20512345678', 'Laive S.A.');

INSERT INTO Factura (numero_fact, total, fecha, id_empleado, RUC) VALUES
('1234567890', 250, '2024-10-01', 'E0000001', '20517398764'),
('9876543210', 125, '2024-10-02', 'E0000002', '20123456789'),
('1357924680', 300, '2024-10-03', 'E0000003', '20450012345'),
('2468135790', 80, '2024-10-04', 'E0000004', '20507465134'),
('1029384756', 450, '2024-10-05', 'E0000005', '20104268983'),
('5647382910', 230, '2024-10-06', 'E0000006', '20513842594'),
('8192736450', 95, '2024-10-07', 'E0000007', '20420012346'),
('3748291056', 150, '2024-10-08', 'E0000008', '20514348452'),
('6789012345', 600, '2024-10-09', 'E0000009', '20456910767'),
('5432167890', 75, '2024-10-10', 'E0000010', '20512345678');



-- Próximos a vencer en X meses
SELECT nombre AS producto, anio_vencimiento, mes_vencimiento, dia_vencimiento
FROM Producto
WHERE (anio_vencimiento = YEAR(CURDATE()) AND mes_vencimiento <= MONTH(CURDATE()) + 5)
   OR (anio_vencimiento = YEAR(CURDATE()) + 1 AND mes_vencimiento < (MONTH(CURDATE()) + 5 - 12));

-- Total de productos por grupos y subgrupos
SELECT G.nombre AS grupo, S.nombre AS subgrupo, SUM(P.stock) AS total_stock
FROM Producto P
JOIN Subgrupo S ON P.id_subgrupo = S.id_subgrupo
JOIN Grupo G ON S.id_grupo = G.id_grupo
GROUP BY G.nombre, S.nombre;

-- Ubicación de un producto en el almacén
SELECT P.nombre AS producto, U.nombre AS ubicacion
FROM Producto P
JOIN Ubicacion U ON P.id_producto = U.id_producto
WHERE P.nombre = 'Papas Margarita';

-- Productos ingresados según los empleados
SELECT E.nombres AS nombre_empleado, P.nombre AS producto, P.stock
FROM Empleado E
JOIN Producto P ON E.id_empleado = P.id_empleado
ORDER BY E.nombres;


-- Lista de productos encontrados en los almacenes
SELECT A.nombre AS almacen, A.descripcion, P.nombre AS producto, E.nombres AS encargado
FROM Almacen A
JOIN Producto P ON A.id_empleado = P.id_empleado
JOIN Empleado E ON A.id_empleado = E.id_empleado
ORDER BY A.nombre;


-- Lista de productos encontrados en cierto almacén
SELECT A.nombre AS almacen, A.descripcion, P.nombre AS producto, E.nombres AS encargado
FROM Almacen A
JOIN Producto P ON A.id_empleado = P.id_empleado
JOIN Empleado E ON A.id_empleado = E.id_empleado
WHERE A.nombre='Alameda-Cercado'
ORDER BY A.nombre;

-- Lista de lotes por cierto producto
SELECT P.nombre AS producto, L.numero_lote
FROM Producto P
JOIN Lote L ON P.id_producto = L.id_producto
WHERE P.nombre = 'Atún Florida';


-- Facturas por negocios (por RUC)
SELECT Negocio.razon_social, SUM(Factura.total) AS total_facturado
FROM Factura
JOIN Negocio ON Factura.RUC = Negocio.RUC
GROUP BY Negocio.razon_social;


-- Obtener un listado de facturas por los negocios
SELECT F.numero_fact, F.total, N.razon_social
FROM Factura F
LEFT JOIN Negocio N ON F.RUC = N.RUC;


-- Listado de los productos con su información de ubicación y los lotes respectivos para su contabilización
SELECT 
    p.nombre AS Producto,
    p.stock AS Stock_Actual,
    u.nombre AS Ubicacion,
    l.numero_lote AS Lote
FROM Producto p
JOIN Ubicacion u ON p.id_producto = u.id_producto
JOIN Lote l ON p.id_producto = l.id_producto
ORDER BY p.nombre;

-- Procedimiento de insertar empleados

DELIMITER //
CREATE PROCEDURE InsertarEmpleado(
    IN p_id_empleado CHAR(8),
    IN p_rol VARCHAR(30),
    IN p_nombres VARCHAR(20),
    IN p_apellido_pat VARCHAR(20),
    IN p_apellido_mat VARCHAR(20)
)
BEGIN
    INSERT INTO Empleado (id_empleado, rol, nombres, apellido_pat, apellido_mat)
    VALUES (p_id_empleado, p_rol, p_nombres, p_apellido_pat, p_apellido_mat);
END //
DELIMITER ;

-- Procedimiento de actualizar empleados

DELIMITER //
CREATE PROCEDURE ActualizarEmpleado(
    IN p_id_empleado CHAR(8),
    IN p_rol VARCHAR(30),
    IN p_nombres VARCHAR(20),
    IN p_apellido_pat VARCHAR(20),
    IN p_apellido_mat VARCHAR(20)
)
BEGIN
    UPDATE Empleado
    SET rol = p_rol,
        nombres = p_nombres,
        apellido_pat = p_apellido_pat,
        apellido_mat = p_apellido_mat
    WHERE id_empleado = p_id_empleado;
END //
DELIMITER ;

-- Procedimiento de eliminar empleados

DELIMITER //
CREATE PROCEDURE EliminarEmpleado(
    IN p_id_empleado CHAR(8)
)
BEGIN
    DELETE FROM Empleado
    WHERE id_empleado = p_id_empleado;
END //
DELIMITER ;

-- Procedimiento de consultar empleados

DELIMITER //
CREATE PROCEDURE ConsultarEmpleadoPorId(
    IN p_id_empleado CHAR(8)
)
BEGIN
    SELECT * 
    FROM Empleado
    WHERE id_empleado = p_id_empleado;
END //
DELIMITER ;

-- Procedimiento de insertar productos

DELIMITER //
CREATE PROCEDURE InsertarProducto(
    IN p_id_producto CHAR(8),
    IN p_id_empleado CHAR(8),
    IN p_id_subgrupo INTEGER,
    IN p_nombre VARCHAR(20),
    IN p_unidad CHAR(4),
    IN p_stock INTEGER,
    IN p_anio_vencimiento NUMERIC(4),
    IN p_mes_vencimiento NUMERIC(2),
    IN p_dia_vencimiento NUMERIC(2),
    IN p_anio_produccion NUMERIC(4),
    IN p_mes_produccion NUMERIC(2),
    IN p_dia_produccion NUMERIC(2),
    IN p_anio_administracion NUMERIC(4),
    IN p_mes_administracion NUMERIC(2),
    IN p_dia_administracion NUMERIC(2)
)
BEGIN
    INSERT INTO Producto (
        id_producto, id_empleado, id_subgrupo, nombre, unidad, stock,
        anio_vencimiento, mes_vencimiento, dia_vencimiento,
        anio_produccion, mes_produccion, dia_produccion,
        anio_administracion, mes_administracion, dia_administracion
    )
    VALUES (
        p_id_producto, p_id_empleado, p_id_subgrupo, p_nombre, p_unidad, p_stock,
        p_anio_vencimiento, p_mes_vencimiento, p_dia_vencimiento,
        p_anio_produccion, p_mes_produccion, p_dia_produccion,
        p_anio_administracion, p_mes_administracion, p_dia_administracion
    );
END //
DELIMITER ;

-- Procedimiento de consultar productos

DELIMITER //
CREATE PROCEDURE ConsultarProductoPorId(
    IN p_id_producto CHAR(8)
)
BEGIN
    SELECT stock
    FROM Producto
    WHERE id_producto = p_id_producto;
END //
DELIMITER ;

-- Procedimiento de actualizar productos

DELIMITER //
CREATE PROCEDURE ActualizarProducto(
    IN p_id_producto CHAR(8),
    IN p_id_empleado CHAR(8),
    IN p_id_subgrupo INTEGER,
    IN p_nombre VARCHAR(20),
    IN p_unidad CHAR(4),
    IN p_stock INTEGER,
    IN p_anio_vencimiento NUMERIC(4),
    IN p_mes_vencimiento NUMERIC(2),
    IN p_dia_vencimiento NUMERIC(2),
    IN p_anio_produccion NUMERIC(4),
    IN p_mes_produccion NUMERIC(2),
    IN p_dia_produccion NUMERIC(2),
    IN p_anio_administracion NUMERIC(4),
    IN p_mes_administracion NUMERIC(2),
    IN p_dia_administracion NUMERIC(2)
)
BEGIN
    UPDATE Producto
    SET 
        id_empleado = p_id_empleado,
        id_subgrupo = p_id_subgrupo,
        nombre = p_nombre,
        unidad = p_unidad,
        stock = p_stock,
        anio_vencimiento = p_anio_vencimiento,
        mes_vencimiento = p_mes_vencimiento,
        dia_vencimiento = p_dia_vencimiento,
        anio_produccion = p_anio_produccion,
        mes_produccion = p_mes_produccion,
        dia_produccion = p_dia_produccion,
        anio_administracion = p_anio_administracion,
        mes_administracion = p_mes_administracion,
        dia_administracion = p_dia_administracion
    WHERE id_producto = p_id_producto;
END //
DELIMITER ;

-- Procedimiento de eliminar producto

DELIMITER //
CREATE PROCEDURE EliminarProducto(
    IN p_id_producto CHAR(8)
)
BEGIN
    DELETE FROM Producto
    WHERE id_producto = p_id_producto;
END //
DELIMITER ;

-- Procedimiento de insertar factura

DELIMITER //
CREATE PROCEDURE InsertarFactura(
    IN p_numero_fact CHAR(10),
    IN p_total INTEGER,
    IN p_fecha DATE,
    IN p_id_empleado CHAR(8),
    IN p_RUC CHAR(11)
)
BEGIN
    INSERT INTO Factura (numero_fact, total, fecha, id_empleado, RUC)
    VALUES (p_numero_fact, p_total, p_fecha, p_id_empleado, p_RUC);
END //
DELIMITER ;

-- Procedimiento de actualizar factura

DELIMITER //
CREATE PROCEDURE ActualizarFactura(
    IN p_numero_factura CHAR(10),
    IN p_fecha DATE,
    IN p_total DECIMAL(10, 2),
    IN p_id_empleado CHAR(8),
    IN p_RUC CHAR(11)
)
BEGIN
    UPDATE Factura
    SET fecha = p_fecha,
        total = p_total,
        id_empleado = p_id_empleado,
        RUC = p_RUC
    WHERE numero_fact = p_numero_factura;
END //
DELIMITER ;

-- Procedimiento de consultar factura

DELIMITER //
CREATE PROCEDURE ConsultarFacturaPorNumero(
    IN p_numero_factura CHAR(10)
)
BEGIN
    SELECT * 
    FROM Factura
    WHERE numero_fact = p_numero_factura;
END //
DELIMITER ;

-- Procedimiento de eliminar factura

DELIMITER //
CREATE PROCEDURE EliminarFactura(
    IN p_numero_factura CHAR(10)
)
BEGIN
    DELETE FROM Factura
    WHERE numero_fact = p_numero_factura;
END //
DELIMITER ;

-- Inssertar negocio

DELIMITER //

CREATE PROCEDURE CrearNegocio(
    IN p_RUC CHAR(11),
    IN p_razon_social VARCHAR(50)
)
BEGIN
    INSERT INTO Negocio (RUC, razon_social)
    VALUES (p_RUC, p_razon_social);
END //

DELIMITER ;

-- LEER NEGOCIOS

DELIMITER //

CREATE PROCEDURE LeerNegocios()
BEGIN
    SELECT * FROM Negocio;
END //

DELIMITER ;


-- LEER NEGOCIO POR RUC

DELIMITER //

CREATE PROCEDURE LeerNegocioPorRUC(
    IN p_RUC CHAR(11)
)
BEGIN
    SELECT * 
    FROM Negocio
    WHERE RUC = p_RUC;
END //

DELIMITER ;

-- ACTUALIZAR NEGOCIO POR RUC

DELIMITER //

CREATE PROCEDURE ActualizarNegocio(
    IN p_RUC CHAR(11),
    IN p_razon_social VARCHAR(50)
)
BEGIN
    UPDATE Negocio
    SET razon_social = p_razon_social
    WHERE RUC = p_RUC;
END //

DELIMITER ;
